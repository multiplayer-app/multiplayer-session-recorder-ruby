name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.6'
          bundler-cache: true

      - name: Extract version from tag
        id: version
        run: |
          # Extract version from tag name, handling both 'v' prefix and no prefix
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update version file
        run: |
          # Update the version in lib/session_recorder/version.rb
          cat > lib/session_recorder/version.rb << EOF
          # frozen_string_literal: true
          
          module Multiplayer
            module SessionRecorder
              VERSION = "${{ steps.version.outputs.version }}"
            end
          end
          EOF
          echo "Updated version to ${{ steps.version.outputs.version }}"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add lib/session_recorder/version.rb
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git push origin main

      - name: Configure Bundler
        run: |
          bundle config set --local frozen false
          bundle config set --local deployment false
          bundle config set --local path vendor/bundle

      - name: Install build dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build gem
        run: |
          bundle exec rake build
          # Alternative: gem build multiplayer_otlp.gemspec

      - name: Publish to RubyGems
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          gem push pkg/multiplayer-session-recorder-${{ steps.version.outputs.version }}.gem

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## What's Changed
            
            Release version ${{ steps.version.outputs.version }}
            
            ### Installation
            
            ```bash
            gem install multiplayer-session-recorder
            ```
            
            ### Usage
            
            ```ruby
            require 'session-recorder'
            
            # Create exporter
            exporter = SessionRecorder::Exporters.create_http_trace_exporter(
              api_key: 'your-api-key'
            )
            ```
            
            See [README.md](README.md) for full documentation.
          draft: false
          prerelease: false
